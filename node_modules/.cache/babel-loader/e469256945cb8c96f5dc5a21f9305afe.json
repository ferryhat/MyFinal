{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FERIEL\\\\Desktop\\\\CarRent\\\\client\\\\src\\\\components\\\\dashboardComponents\\\\AdminMessages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { NavLink, useEffect, useHistory } from \"react-router-dom\";\nimport { AdminContext } from \"../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminMessages = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('/messages', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessages(data);\n      } else {\n        console.log('Failed to fetch messages:', data.error);\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), messages.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"User: \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone: \", user.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), user.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", message.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", message.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone: \", message.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Message: \", message.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, user._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminMessages, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = AdminMessages;\nexport default AdminMessages;\nvar _c;\n$RefreshReg$(_c, \"AdminMessages\");","map":{"version":3,"names":["React","useState","useContext","NavLink","useEffect","useHistory","AdminContext","jsxDEV","_jsxDEV","AdminMessages","_s","messages","setMessages","fetchMessages","response","fetch","method","headers","data","json","ok","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","name","email","phone","message","index","_id","_c","$RefreshReg$"],"sources":["C:/Users/FERIEL/Desktop/CarRent/client/src/components/dashboardComponents/AdminMessages.js"],"sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { NavLink, useEffect, useHistory } from \"react-router-dom\";\r\n\r\nimport { AdminContext } from \"../../App\"\r\n\r\n\r\nconst AdminMessages = () => {\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchMessages();\r\n    }, []);\r\n\r\n    const fetchMessages = async () => {\r\n        try {\r\n            const response = await fetch('/messages', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                setMessages(data);\r\n            } else {\r\n                console.log('Failed to fetch messages:', data.error);\r\n            }\r\n        } catch (error) {\r\n            console.log('Error:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Admin Messages</h1>\r\n            {messages.map((user) => (\r\n                <div key={user._id}>\r\n                    <h2>User: {user.name}</h2>\r\n                    <p>Email: {user.email}</p>\r\n                    <p>Phone: {user.phone}</p>\r\n                    <h3>Messages:</h3>\r\n                    {user.messages.map((message, index) => (\r\n                        <div key={index}>\r\n                            <p>Name: {message.name}</p>\r\n                            <p>Email: {message.email}</p>\r\n                            <p>Phone: {message.phone}</p>\r\n                            <p>Message: {message.message}</p>\r\n                        </div>\r\n                    ))}\r\n                    <hr />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminMessages;"],"mappings":"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"},"metadata":{},"sourceType":"module"}