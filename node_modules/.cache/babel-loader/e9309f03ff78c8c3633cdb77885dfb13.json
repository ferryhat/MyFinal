{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FERIEL\\\\Desktop\\\\CarRent\\\\client\\\\src\\\\components\\\\BookingRequest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { UserContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookingRequest = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  });\n  const {\n    state\n  } = useContext(UserContext);\n  const history = useHistory();\n  useEffect(() => {\n    if (!state) {\n      Swal.fire({\n        title: 'Please sign in to make a booking request!',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'OK'\n      }).then(result => {\n        if (result.isConfirmed) {\n          history.push('/signin');\n        } else {\n          history.push('/');\n        }\n      });\n    } else {\n      // Fetch user data from the server and update the state\n      const fetchUserData = async () => {\n        try {\n          const res = await fetch('/getdata', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          const data = await res.json();\n          setUserData({\n            ...userData,\n            name: data.name,\n            email: data.email,\n            phone: data.phone\n          });\n          if (!res.ok) {\n            throw new Error(res.error);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      fetchUserData();\n    }\n  }, [state, history]);\n  const handleInputs = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setUserData({\n      ...userData,\n      [name]: value\n    });\n  };\n  const sendBookingRequest = async e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      phone\n    } = userData;\n    if (!name || !email || !phone) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Invalid Booking Request',\n        text: 'Please fill in all the fields',\n        showConfirmButton: true\n      });\n      return;\n    }\n\n    // Send the booking request to the server\n    try {\n      const res = await fetch('/booking', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          phone\n        })\n      });\n      const data = await res.json();\n      if (!data) {\n        console.log('Booking request not sent');\n      } else {\n        Swal.fire({\n          icon: 'success',\n          title: 'Your booking request has been sent',\n          showConfirmButton: false,\n          timer: 1500\n        });\n        setUserData({\n          ...userData,\n          name: '',\n          email: '',\n          phone: ''\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: state && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: userData.name,\n          onChange: handleInputs,\n          placeholder: \"Your name\",\n          className: \"box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: userData.email,\n          onChange: handleInputs,\n          placeholder: \"Your email\",\n          className: \"box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"phone\",\n          value: userData.phone,\n          onChange: handleInputs,\n          placeholder: \"Your phone\",\n          className: \"box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Send booking request\",\n          onClick: sendBookingRequest,\n          className: \"btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(BookingRequest, \"KKcZAaS8ChHhJCQvOgAg3PmcNyc=\", false, function () {\n  return [useHistory];\n});\n_c = BookingRequest;\nexport default BookingRequest;\nvar _c;\n$RefreshReg$(_c, \"BookingRequest\");","map":{"version":3,"names":["React","useState","useEffect","useContext","NavLink","useHistory","Swal","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","BookingRequest","_s","userData","setUserData","name","email","phone","state","history","fire","title","icon","showCancelButton","confirmButtonText","then","result","isConfirmed","push","fetchUserData","res","fetch","method","headers","data","json","ok","Error","error","console","log","handleInputs","e","target","value","sendBookingRequest","preventDefault","text","showConfirmButton","body","JSON","stringify","timer","children","type","onChange","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/FERIEL/Desktop/CarRent/client/src/components/BookingRequest.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { UserContext } from '../App';\r\n\r\nconst BookingRequest = () => {\r\n    const [userData, setUserData] = useState({ name: '', email: '', phone: '' });\r\n    const { state } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!state) {\r\n            Swal.fire({\r\n                title: 'Please sign in to make a booking request!',\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'OK'\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    history.push('/signin');\r\n                } else {\r\n                    history.push('/');\r\n                }\r\n            });\r\n        } else {\r\n            // Fetch user data from the server and update the state\r\n            const fetchUserData = async () => {\r\n                try {\r\n                    const res = await fetch('/getdata', {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                    });\r\n\r\n                    const data = await res.json();\r\n\r\n                    setUserData({ ...userData, name: data.name, email: data.email, phone: data.phone });\r\n\r\n                    if (!res.ok) {\r\n                        throw new Error(res.error);\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            };\r\n\r\n            fetchUserData();\r\n        }\r\n    }, [state, history]);\r\n\r\n    const handleInputs = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setUserData({ ...userData, [name]: value });\r\n    };\r\n\r\n    const sendBookingRequest = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = userData;\r\n\r\n        if (!name || !email || !phone) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Invalid Booking Request',\r\n                text: 'Please fill in all the fields',\r\n                showConfirmButton: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Send the booking request to the server\r\n        try {\r\n            const res = await fetch('/booking', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    name,\r\n                    email,\r\n                    phone\r\n                })\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            if (!data) {\r\n                console.log('Booking request not sent');\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Your booking request has been sent',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                });\r\n                setUserData({ ...userData, name: '', email: '', phone: '' });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {state && (\r\n                <div>\r\n                    {/* Render the booking request form */}\r\n                    <form method=\"POST\">\r\n                        <input type=\"text\" name=\"name\" value={userData.name} onChange={handleInputs} placeholder=\"Your name\" className=\"box\" />\r\n                        <input type=\"email\" name=\"email\" value={userData.email} onChange={handleInputs} placeholder=\"Your email\" className=\"box\" />\r\n                        <input type=\"tel\" name=\"phone\" value={userData.phone} onChange={handleInputs} placeholder=\"Your phone\" className=\"box\" />\r\n                        <input type=\"submit\" value=\"Send booking request\" onClick={sendBookingRequest} className=\"btn\" />\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BookingRequest;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}