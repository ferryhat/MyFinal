{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FERIEL\\\\Desktop\\\\client\\\\src\\\\components\\\\dashboardComponents\\\\totalusers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AdminContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Totalusers = () => {\n  _s();\n  const {\n    adminState,\n    dispatchadmin\n  } = useContext(AdminContext);\n  const [getUsers, setGetUsers] = useState([]);\n  const getallusers = async () => {\n    try {\n      const res = await fetch('/getavailableusers', {\n        method: 'GET'\n      });\n      const data = await res.json();\n      setGetUsers(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getallusers();\n  }, []);\n  const deleteUser = async e => {\n    const userIdFromDashBoard = e.target.id;\n    try {\n      await fetch('/deleteUserfromdashboard', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userIdFromDashBoard\n        })\n      });\n\n      // Refresh the user list after deleting\n      getallusers();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Total Users : \", getUsers.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Totalusers, \"cVj5fXQbBsTucPs9TfN8nCJTOc8=\");\n_c = Totalusers;\nexport default Totalusers;\nvar _c;\n$RefreshReg$(_c, \"Totalusers\");","map":{"version":3,"names":["React","useState","useEffect","useContext","NavLink","AdminContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Totalusers","_s","adminState","dispatchadmin","getUsers","setGetUsers","getallusers","res","fetch","method","data","json","error","console","log","deleteUser","e","userIdFromDashBoard","target","id","headers","body","JSON","stringify","children","className","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/FERIEL/Desktop/client/src/components/dashboardComponents/totalusers.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { AdminContext } from '../../App';\r\n\r\nconst Totalusers = () => {\r\n    const { adminState, dispatchadmin } = useContext(AdminContext);\r\n    const [getUsers, setGetUsers] = useState([]);\r\n\r\n    const getallusers = async () => {\r\n        try {\r\n            const res = await fetch('/getavailableusers', {\r\n                method: 'GET',\r\n            });\r\n\r\n            const data = await res.json();\r\n            setGetUsers(data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getallusers();\r\n    }, []);\r\n\r\n    const deleteUser = async (e) => {\r\n        const userIdFromDashBoard = e.target.id;\r\n\r\n        try {\r\n            await fetch('/deleteUserfromdashboard', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    userIdFromDashBoard,\r\n                }),\r\n            });\r\n\r\n            // Refresh the user list after deleting\r\n            getallusers();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n\r\n\r\n            <h1 className=\"heading\">\r\n                <span>Total Users : {getUsers.length}</span>\r\n            </h1>\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Totalusers;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,OAAO,QAAQ,kBAAkB;AAE1C,SAASC,YAAY,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAGV,UAAU,CAACE,YAAY,CAAC;EAC9D,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;QAC1CC,MAAM,EAAE;MACZ,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;MAC7BN,WAAW,CAACK,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZc,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,UAAU,GAAG,MAAOC,CAAC,IAAK;IAC5B,MAAMC,mBAAmB,GAAGD,CAAC,CAACE,MAAM,CAACC,EAAE;IAEvC,IAAI;MACA,MAAMX,KAAK,CAAC,0BAA0B,EAAE;QACpCC,MAAM,EAAE,MAAM;QACdW,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBN;QACJ,CAAC;MACL,CAAC,CAAC;;MAEF;MACAX,WAAW,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EAID,oBACIf,OAAA,CAAAE,SAAA;IAAAyB,QAAA,eAMI3B,OAAA;MAAI4B,SAAS,EAAC,SAAS;MAAAD,QAAA,eACnB3B,OAAA;QAAA2B,QAAA,GAAM,gBAAc,EAACpB,QAAQ,CAACsB,MAAM;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C;EAAC,gBAMP,CAAC;AAEX,CAAC;AAAC7B,EAAA,CA7DID,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AA+DhB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}