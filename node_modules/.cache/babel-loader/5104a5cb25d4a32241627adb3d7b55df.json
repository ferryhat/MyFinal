{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FERIEL\\\\Desktop\\\\CarRent\\\\client\\\\src\\\\components\\\\dashboardComponents\\\\Statistics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Chart from 'chart.js/auto';\nimport 'chartjs-adapter-date-fns';\nimport { AdminContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Statistics = () => {\n  _s();\n  const {\n    adminState,\n    dispatchadmin\n  } = useContext(AdminContext);\n  const [income, setIncome] = useState([]);\n  const chartRef = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  const getrentcarincome = async () => {\n    try {\n      const res = await fetch('/getrentcarincome', {\n        method: 'GET'\n      });\n      const data = await res.json();\n      setIncome(data);\n\n      // ...\n\n      createChart();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getrentcarincome();\n  }, []);\n  const createChart = () => {\n    // Extract the data from the income state\n    const chartLabels = [];\n    const chartData = [];\n    income.forEach(item => {\n      item.soldItems.forEach(soldItem => {\n        chartLabels.push(`${soldItem.brand}-${soldItem.model}`);\n        chartData.push(soldItem.totalIncome);\n      });\n    });\n\n    // Create chart\n    const chartConfig = {\n      type: 'bar',\n      data: {\n        labels: chartLabels,\n        datasets: [{\n          label: 'Total Income',\n          data: chartData,\n          backgroundColor: 'rgba(228, 87, 46)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        },\n        indexAxis: 'y',\n        // Display bars horizontally\n        barThickness: 'flex' // Distribute bar width evenly\n      }\n    };\n\n    if (chartInstance) {\n      // Update the existing chart\n      chartInstance.data.labels = chartLabels;\n      chartInstance.data.datasets[0].data = chartData;\n      chartInstance.update();\n    } else {\n      // Create a new chart\n      const newChartInstance = new Chart(chartRef.current, chartConfig);\n      setChartInstance(newChartInstance);\n    }\n  };\n  const Loginbutton = () => {\n    // ...\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"home-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"salecartableDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chartContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: chartRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Statistics, \"c5g03pufmttVMKgfktHL/TABkao=\");\n_c = Statistics;\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","NavLink","Chart","AdminContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Statistics","_s","adminState","dispatchadmin","income","setIncome","chartRef","chartInstance","setChartInstance","getrentcarincome","res","fetch","method","data","json","createChart","error","console","log","chartLabels","chartData","forEach","item","soldItems","soldItem","push","brand","model","totalIncome","chartConfig","type","labels","datasets","label","backgroundColor","borderWidth","options","responsive","scales","y","beginAtZero","indexAxis","barThickness","update","newChartInstance","current","Loginbutton","children","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/FERIEL/Desktop/CarRent/client/src/components/dashboardComponents/Statistics.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Chart from 'chart.js/auto';\r\nimport 'chartjs-adapter-date-fns';\r\n\r\nimport { AdminContext } from '../../App';\r\n\r\nconst Statistics = () => {\r\n    const { adminState, dispatchadmin } = useContext(AdminContext);\r\n\r\n    const [income, setIncome] = useState([]);\r\n    const chartRef = useRef(null);\r\n    const [chartInstance, setChartInstance] = useState(null);\r\n\r\n    const getrentcarincome = async () => {\r\n        try {\r\n            const res = await fetch('/getrentcarincome', {\r\n                method: 'GET',\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            setIncome(data);\r\n\r\n            // ...\r\n\r\n            createChart();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getrentcarincome();\r\n    }, []);\r\n\r\n    const createChart = () => {\r\n        // Extract the data from the income state\r\n        const chartLabels = [];\r\n        const chartData = [];\r\n        income.forEach(item => {\r\n            item.soldItems.forEach(soldItem => {\r\n                chartLabels.push(`${soldItem.brand}-${soldItem.model}`);\r\n                chartData.push(soldItem.totalIncome);\r\n            });\r\n        });\r\n\r\n        // Create chart\r\n        const chartConfig = {\r\n            type: 'bar',\r\n            data: {\r\n                labels: chartLabels,\r\n                datasets: [\r\n                    {\r\n                        label: 'Total Income',\r\n                        data: chartData,\r\n                        backgroundColor: 'rgba(228, 87, 46)',\r\n                        borderWidth: 1,\r\n                    },\r\n                ],\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                scales: {\r\n                    y: {\r\n                        beginAtZero: true,\r\n                    },\r\n                },\r\n                indexAxis: 'y', // Display bars horizontally\r\n                barThickness: 'flex', // Distribute bar width evenly\r\n            },\r\n        };\r\n\r\n        if (chartInstance) {\r\n            // Update the existing chart\r\n            chartInstance.data.labels = chartLabels;\r\n            chartInstance.data.datasets[0].data = chartData;\r\n            chartInstance.update();\r\n        } else {\r\n            // Create a new chart\r\n            const newChartInstance = new Chart(chartRef.current, chartConfig);\r\n            setChartInstance(newChartInstance);\r\n        }\r\n    };\r\n\r\n    const Loginbutton = () => {\r\n        // ...\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* ... */}\r\n            <section className=\"home-section\">\r\n                {/* ... */}\r\n                <div className=\"salecartableDiv\">\r\n                    {/* ... */}\r\n\r\n                    {/* Bar chart */}\r\n                    <div className=\"chartContainer\">\r\n                        <canvas ref={chartRef}></canvas>\r\n                    </div>\r\n\r\n                    {/* ... */}\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Statistics;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}