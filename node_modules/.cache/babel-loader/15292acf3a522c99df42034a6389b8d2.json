{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FERIEL\\\\Desktop\\\\CarRent\\\\client\\\\src\\\\components\\\\dashboardComponents\\\\Chartotalincome.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TotalIncomeChart = _ref => {\n  _s();\n  let {\n    incomeChartData\n  } = _ref;\n  const incomeChartRef = useRef(null);\n  useEffect(() => {\n    if (incomeChartData.length > 0) {\n      // Create chart for income\n      const incomeLabels = incomeChartData.map(item => `${item.brand}-${item.model}`);\n      const incomeValues = incomeChartData.map(item => item.totalIncome);\n      const incomeChartConfig = {\n        type: 'bar',\n        data: {\n          labels: incomeLabels,\n          datasets: [{\n            label: 'Total Income (DA)',\n            data: incomeValues,\n            backgroundColor: 'rgba(73, 131, 191)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          },\n          indexAxis: 'y',\n          barThickness: 'flex'\n        }\n      };\n      const incomeChart = new window.Chart(incomeChartRef.current, incomeChartConfig);\n      return () => {\n        incomeChart.destroy();\n      };\n    }\n  }, [incomeChartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chartContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: incomeChartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(TotalIncomeChart, \"7Rq5YmXbLlYYpv7UxZabC2XiuS8=\");\n_c = TotalIncomeChart;\nexport default TotalIncomeChart;\nvar _c;\n$RefreshReg$(_c, \"TotalIncomeChart\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","TotalIncomeChart","_ref","_s","incomeChartData","incomeChartRef","length","incomeLabels","map","item","brand","model","incomeValues","totalIncome","incomeChartConfig","type","data","labels","datasets","label","backgroundColor","borderWidth","options","responsive","scales","y","beginAtZero","indexAxis","barThickness","incomeChart","window","Chart","current","destroy","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/FERIEL/Desktop/CarRent/client/src/components/dashboardComponents/Chartotalincome.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst TotalIncomeChart = ({ incomeChartData }) => {\r\n    const incomeChartRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (incomeChartData.length > 0) {\r\n            // Create chart for income\r\n            const incomeLabels = incomeChartData.map((item) => `${item.brand}-${item.model}`);\r\n            const incomeValues = incomeChartData.map((item) => item.totalIncome);\r\n\r\n            const incomeChartConfig = {\r\n                type: 'bar',\r\n                data: {\r\n                    labels: incomeLabels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Total Income (DA)',\r\n                            data: incomeValues,\r\n                            backgroundColor: 'rgba(73, 131, 191)',\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true,\r\n                        },\r\n                    },\r\n                    indexAxis: 'y',\r\n                    barThickness: 'flex',\r\n                },\r\n            };\r\n\r\n            const incomeChart = new window.Chart(incomeChartRef.current, incomeChartConfig);\r\n\r\n            return () => {\r\n                incomeChart.destroy();\r\n            };\r\n        }\r\n    }, [incomeChartData]);\r\n\r\n    return (\r\n        <div className=\"chartContainer\">\r\n            <canvas ref={incomeChartRef}></canvas>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TotalIncomeChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,gBAAgB,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC;EAAgB,CAAC,GAAAF,IAAA;EACzC,MAAMG,cAAc,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACZ,IAAIO,eAAe,CAACE,MAAM,GAAG,CAAC,EAAE;MAC5B;MACA,MAAMC,YAAY,GAAGH,eAAe,CAACI,GAAG,CAAEC,IAAI,IAAM,GAAEA,IAAI,CAACC,KAAM,IAAGD,IAAI,CAACE,KAAM,EAAC,CAAC;MACjF,MAAMC,YAAY,GAAGR,eAAe,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,WAAW,CAAC;MAEpE,MAAMC,iBAAiB,GAAG;QACtBC,IAAI,EAAE,KAAK;QACXC,IAAI,EAAE;UACFC,MAAM,EAAEV,YAAY;UACpBW,QAAQ,EAAE,CACN;YACIC,KAAK,EAAE,mBAAmB;YAC1BH,IAAI,EAAEJ,YAAY;YAClBQ,eAAe,EAAE,oBAAoB;YACrCC,WAAW,EAAE;UACjB,CAAC;QAET,CAAC;QACDC,OAAO,EAAE;UACLC,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE;YACJC,CAAC,EAAE;cACCC,WAAW,EAAE;YACjB;UACJ,CAAC;UACDC,SAAS,EAAE,GAAG;UACdC,YAAY,EAAE;QAClB;MACJ,CAAC;MAED,MAAMC,WAAW,GAAG,IAAIC,MAAM,CAACC,KAAK,CAAC1B,cAAc,CAAC2B,OAAO,EAAElB,iBAAiB,CAAC;MAE/E,OAAO,MAAM;QACTe,WAAW,CAACI,OAAO,CAAC,CAAC;MACzB,CAAC;IACL;EACJ,CAAC,EAAE,CAAC7B,eAAe,CAAC,CAAC;EAErB,oBACIJ,OAAA;IAAKkC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC3BnC,OAAA;MAAQoC,GAAG,EAAE/B;IAAe;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEd,CAAC;AAACrC,EAAA,CA/CIF,gBAAgB;AAAAwC,EAAA,GAAhBxC,gBAAgB;AAiDtB,eAAeA,gBAAgB;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}