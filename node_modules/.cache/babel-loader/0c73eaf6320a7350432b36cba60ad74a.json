{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FERIEL\\\\Desktop\\\\ever\\\\CarRent\\\\client\\\\src\\\\components\\\\dashboardComponents\\\\LogStat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AdminContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Logstats = () => {\n  _s();\n  const {\n    adminState,\n    dispatchadmin\n  } = useContext(AdminContext);\n  const [getUsers, setGetUsers] = useState([]);\n  const canvasRef = useRef(null);\n  const getallusers = async () => {\n    try {\n      const res = await fetch('/getavailableusers', {\n        method: 'GET'\n      });\n      const data = await res.json();\n      setGetUsers(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getallusers();\n  }, []);\n  useEffect(() => {\n    if (canvasRef.current && getUsers.length > 0) {\n      const ctx = canvasRef.current.getContext('2d');\n      const labels = getUsers.map(user => user.name);\n      const data = getUsers.map(user => user.tokens.length);\n\n      // Chart customization and drawing logic here\n      // You can use the ctx variable to interact with the canvas and draw the chart\n\n      // Example: Draw a bar chart\n      const chart = new window.Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'Logged in times',\n            data: data,\n            backgroundColor: 'rgba(255, 27, 28)',\n            borderColor: 'rgba(0, 0, 0)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n\n      // Cleanup the chart when the component unmounts\n      return () => {\n        chart.destroy();\n      };\n    }\n  }, [getUsers]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Most Logged in Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Logstats, \"DZ9lPnhhe5jD1j5YAWWNgqtekRo=\");\n_c = Logstats;\nexport default Logstats;\nvar _c;\n$RefreshReg$(_c, \"Logstats\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","NavLink","AdminContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Logstats","_s","adminState","dispatchadmin","getUsers","setGetUsers","canvasRef","getallusers","res","fetch","method","data","json","error","console","log","current","length","ctx","getContext","labels","map","user","name","tokens","chart","window","Chart","type","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","scales","y","beginAtZero","destroy","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/FERIEL/Desktop/ever/CarRent/client/src/components/dashboardComponents/LogStat.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AdminContext } from '../../App';\r\n\r\nconst Logstats = () => {\r\n    const { adminState, dispatchadmin } = useContext(AdminContext);\r\n    const [getUsers, setGetUsers] = useState([]);\r\n\r\n    const canvasRef = useRef(null);\r\n\r\n    const getallusers = async () => {\r\n        try {\r\n            const res = await fetch('/getavailableusers', {\r\n                method: 'GET',\r\n            });\r\n\r\n            const data = await res.json();\r\n            setGetUsers(data);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getallusers();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (canvasRef.current && getUsers.length > 0) {\r\n            const ctx = canvasRef.current.getContext('2d');\r\n            const labels = getUsers.map((user) => user.name);\r\n            const data = getUsers.map((user) => user.tokens.length);\r\n\r\n            // Chart customization and drawing logic here\r\n            // You can use the ctx variable to interact with the canvas and draw the chart\r\n\r\n            // Example: Draw a bar chart\r\n            const chart = new window.Chart(ctx, {\r\n                type: 'bar',\r\n                data: {\r\n                    labels: labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Logged in times',\r\n                            data: data,\r\n                            backgroundColor: 'rgba(255, 27, 28)',\r\n                            borderColor: 'rgba(0, 0, 0)',\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true,\r\n                        },\r\n                    },\r\n                },\r\n            });\r\n\r\n            // Cleanup the chart when the component unmounts\r\n            return () => {\r\n                chart.destroy();\r\n            };\r\n        }\r\n    }, [getUsers]);\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n            <h1 className=\"heading\">\r\n                <span>Most Logged in Users</span>\r\n            </h1>\r\n\r\n            <canvas ref={canvasRef}></canvas>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Logstats;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}